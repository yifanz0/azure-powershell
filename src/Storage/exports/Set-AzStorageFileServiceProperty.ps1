
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Code generated by Microsoft (R) AutoRest Code Generator.Changes may cause incorrect behavior and will be lost if the code
# is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Sets the properties of file services in storage accounts, including CORS (Cross-Origin Resource Sharing) rules.
.Description
Sets the properties of file services in storage accounts, including CORS (Cross-Origin Resource Sharing) rules.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210801.IFileServiceProperties
.Outputs
Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210801.IFileServiceProperties
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

CORCORSRULE <ICorsRule[]>: The List of CORS rules. You can include up to five CorsRule elements in the request. 
  AllowedHeader <String[]>: Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request.
  AllowedMethod <String[]>: Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin.
  AllowedOrigin <String[]>: Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or "*" to allow all domains
  ExposedHeader <String[]>: Required if CorsRule element is present. A list of response headers to expose to CORS clients.
  MaxAgeInSecond <Int32>: Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response.

PARAMETER <IFileServiceProperties>: The properties of File services in storage account.
  [CorCorsRule <ICorsRule[]>]: The List of CORS rules. You can include up to five CorsRule elements in the request. 
    AllowedHeader <String[]>: Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request.
    AllowedMethod <String[]>: Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin.
    AllowedOrigin <String[]>: Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or "*" to allow all domains
    ExposedHeader <String[]>: Required if CorsRule element is present. A list of response headers to expose to CORS clients.
    MaxAgeInSecond <Int32>: Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response.
  [MultichannelEnabled <Boolean?>]: Indicates whether multichannel is enabled
  [ShareDeleteRetentionPolicyDay <Int32?>]: Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum value can be 365.
  [ShareDeleteRetentionPolicyEnabled <Boolean?>]: Indicates whether DeleteRetentionPolicy is enabled.
  [SkuName <SkuName?>]: The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.
  [SkuTier <SkuTier?>]: The SKU tier. This is based on the SKU name.
  [SmbAuthenticationMethod <String>]: SMB authentication methods supported by server. Valid values are NTLMv2, Kerberos. Should be passed as a string with delimiter ';'.
  [SmbChannelEncryption <String>]: SMB channel encryption supported by server. Valid values are AES-128-CCM, AES-128-GCM, AES-256-GCM. Should be passed as a string with delimiter ';'.
  [SmbKerberosTicketEncryption <String>]: Kerberos ticket encryption supported by server. Valid values are RC4-HMAC, AES-256. Should be passed as a string with delimiter ';'
  [SmbVersion <String>]: SMB protocol versions supported by server. Valid values are SMB2.1, SMB3.0, SMB3.1.1. Should be passed as a string with delimiter ';'.
.Link
https://docs.microsoft.com/powershell/module/az.storage/set-azstoragefileserviceproperty
#>
function Set-AzStorageFileServiceProperty {
[OutputType([Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210801.IFileServiceProperties])]
[CmdletBinding(DefaultParameterSetName='SetExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Category('Path')]
    [System.String]
    # The name of the storage account within the specified resource group.
    # Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    ${AccountName},

    [Parameter(Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Category('Path')]
    [System.String]
    # The name of the resource group within the user's subscription.
    # The name is case insensitive.
    ${ResourceGroupName},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Category('Path')]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.DefaultInfo(Script='(Get-AzContext).Subscription.Id')]
    [System.String]
    # The ID of the target subscription.
    ${SubscriptionId},

    [Parameter(ParameterSetName='Set', Mandatory, ValueFromPipeline)]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210801.IFileServiceProperties]
    # The properties of File services in storage account.
    # To construct, see NOTES section for PARAMETER properties and create a hash table.
    ${Parameter},

    [Parameter(ParameterSetName='SetExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210801.ICorsRule[]]
    # The List of CORS rules.
    # You can include up to five CorsRule elements in the request.
    # 
    # To construct, see NOTES section for CORCORSRULE properties and create a hash table.
    ${CorCorsRule},

    [Parameter(ParameterSetName='SetExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether multichannel is enabled
    ${MultichannelEnabled},

    [Parameter(ParameterSetName='SetExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Category('Body')]
    [System.Int32]
    # Indicates the number of days that the deleted item should be retained.
    # The minimum specified value can be 1 and the maximum value can be 365.
    ${ShareDeleteRetentionPolicyDay},

    [Parameter(ParameterSetName='SetExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether DeleteRetentionPolicy is enabled.
    ${ShareDeleteRetentionPolicyEnabled},

    [Parameter(ParameterSetName='SetExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Category('Body')]
    [System.String]
    # SMB authentication methods supported by server.
    # Valid values are NTLMv2, Kerberos.
    # Should be passed as a string with delimiter ';'.
    ${SmbAuthenticationMethod},

    [Parameter(ParameterSetName='SetExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Category('Body')]
    [System.String]
    # SMB channel encryption supported by server.
    # Valid values are AES-128-CCM, AES-128-GCM, AES-256-GCM.
    # Should be passed as a string with delimiter ';'.
    ${SmbChannelEncryption},

    [Parameter(ParameterSetName='SetExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Category('Body')]
    [System.String]
    # Kerberos ticket encryption supported by server.
    # Valid values are RC4-HMAC, AES-256.
    # Should be passed as a string with delimiter ';'
    ${SmbKerberosTicketEncryption},

    [Parameter(ParameterSetName='SetExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Category('Body')]
    [System.String]
    # SMB protocol versions supported by server.
    # Valid values are SMB2.1, SMB3.0, SMB3.1.1.
    # Should be passed as a string with delimiter ';'.
    ${SmbVersion},

    [Parameter()]
    [Alias('AzureRMContext', 'AzureCredential')]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Category('Azure')]
    [System.Management.Automation.PSObject]
    # The credentials, account, tenant, and subscription used for communication with Azure.
    ${DefaultProfile},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Set = 'Az.Storage.private\Set-AzStorageFileServiceProperty_Set';
            SetExpanded = 'Az.Storage.private\Set-AzStorageFileServiceProperty_SetExpanded';
        }
        if (('Set', 'SetExpanded') -contains $parameterSet -and -not $PSBoundParameters.ContainsKey('SubscriptionId')) {
            $PSBoundParameters['SubscriptionId'] = (Get-AzContext).Subscription.Id
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

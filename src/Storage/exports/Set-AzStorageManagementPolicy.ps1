
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Code generated by Microsoft (R) AutoRest Code Generator.Changes may cause incorrect behavior and will be lost if the code
# is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Sets the managementpolicy to the specified storage account.
.Description
Sets the managementpolicy to the specified storage account.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IManagementPolicy
.Outputs
Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IManagementPolicy
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

POLICYRULE <IManagementPolicyRule[]>: The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
  DefinitionAction <IManagementPolicyAction>: An object that defines the action set.
    [BaseBlobDeleteDaysAfterCreationGreaterThan <Single?>]: Value indicating the age in days after blob creation.
    [BaseBlobDeleteDaysAfterLastTierChangeGreaterThan <Single?>]: Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterModificationGreaterThan to be set for baseBlobs based actions. The blob will be archived if both the conditions are satisfied.
    [BaseBlobEnableAutoTierToHotFromCool <Boolean?>]: This property enables auto tiering of a blob from cool to hot on a blob access. This property requires tierToCool.daysAfterLastAccessTimeGreaterThan.
    [BaseBlobTierToArchiveDaysAfterCreationGreaterThan <Single?>]: Value indicating the age in days after blob creation.
    [BaseBlobTierToArchiveDaysAfterLastTierChangeGreaterThan <Single?>]: Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterModificationGreaterThan to be set for baseBlobs based actions. The blob will be archived if both the conditions are satisfied.
    [BaseBlobTierToCoolDaysAfterCreationGreaterThan <Single?>]: Value indicating the age in days after blob creation.
    [BaseBlobTierToCoolDaysAfterLastTierChangeGreaterThan <Single?>]: Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterModificationGreaterThan to be set for baseBlobs based actions. The blob will be archived if both the conditions are satisfied.
    [DeleteDaysAfterLastAccessTimeGreaterThan <Single?>]: Value indicating the age in days after last blob access. This property can only be used in conjunction with last access time tracking policy
    [DeleteDaysAfterModificationGreaterThan <Single?>]: Value indicating the age in days after last modification
    [SnapshotDeleteDaysAfterCreationGreaterThan <Single?>]: Value indicating the age in days after creation
    [SnapshotDeleteDaysAfterLastTierChangeGreaterThan <Single?>]: Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterCreationGreaterThan to be set for snapshots and blob version based actions. The blob will be archived if both the conditions are satisfied.
    [SnapshotTierToArchiveDaysAfterCreationGreaterThan <Single?>]: Value indicating the age in days after creation
    [SnapshotTierToArchiveDaysAfterLastTierChangeGreaterThan <Single?>]: Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterCreationGreaterThan to be set for snapshots and blob version based actions. The blob will be archived if both the conditions are satisfied.
    [SnapshotTierToCoolDaysAfterCreationGreaterThan <Single?>]: Value indicating the age in days after creation
    [SnapshotTierToCoolDaysAfterLastTierChangeGreaterThan <Single?>]: Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterCreationGreaterThan to be set for snapshots and blob version based actions. The blob will be archived if both the conditions are satisfied.
    [TierToArchiveDaysAfterLastAccessTimeGreaterThan <Single?>]: Value indicating the age in days after last blob access. This property can only be used in conjunction with last access time tracking policy
    [TierToArchiveDaysAfterModificationGreaterThan <Single?>]: Value indicating the age in days after last modification
    [TierToCoolDaysAfterLastAccessTimeGreaterThan <Single?>]: Value indicating the age in days after last blob access. This property can only be used in conjunction with last access time tracking policy
    [TierToCoolDaysAfterModificationGreaterThan <Single?>]: Value indicating the age in days after last modification
    [VersionDeleteDaysAfterCreationGreaterThan <Single?>]: Value indicating the age in days after creation
    [VersionDeleteDaysAfterLastTierChangeGreaterThan <Single?>]: Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterCreationGreaterThan to be set for snapshots and blob version based actions. The blob will be archived if both the conditions are satisfied.
    [VersionTierToArchiveDaysAfterCreationGreaterThan <Single?>]: Value indicating the age in days after creation
    [VersionTierToArchiveDaysAfterLastTierChangeGreaterThan <Single?>]: Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterCreationGreaterThan to be set for snapshots and blob version based actions. The blob will be archived if both the conditions are satisfied.
    [VersionTierToCoolDaysAfterCreationGreaterThan <Single?>]: Value indicating the age in days after creation
    [VersionTierToCoolDaysAfterLastTierChangeGreaterThan <Single?>]: Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterCreationGreaterThan to be set for snapshots and blob version based actions. The blob will be archived if both the conditions are satisfied.
  Name <String>: A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.
  [Enabled <Boolean?>]: Rule is enabled if set to true.
  [FilterBlobIndexMatch <ITagFilter[]>]: An array of blob index tag based filters, there can be at most 10 tag filters
    Name <String>: This is the filter tag name, it can have 1 - 128 characters
    Op <String>: This is the comparison operator which is used for object comparison and filtering. Only == (equality operator) is currently supported
    Value <String>: This is the filter tag value field used for tag based filtering, it can have 0 - 256 characters
  [FilterBlobType <String[]>]: An array of predefined enum values. Currently blockBlob supports all tiering and delete actions. Only delete actions are supported for appendBlob.
  [FilterPrefixMatch <String[]>]: An array of strings for prefixes to be match.

PROPERTY <IManagementPolicy>: The Get Storage Account ManagementPolicies operation response.
  [PolicyRule <IManagementPolicyRule[]>]: The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
    DefinitionAction <IManagementPolicyAction>: An object that defines the action set.
      [BaseBlobDeleteDaysAfterCreationGreaterThan <Single?>]: Value indicating the age in days after blob creation.
      [BaseBlobDeleteDaysAfterLastTierChangeGreaterThan <Single?>]: Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterModificationGreaterThan to be set for baseBlobs based actions. The blob will be archived if both the conditions are satisfied.
      [BaseBlobEnableAutoTierToHotFromCool <Boolean?>]: This property enables auto tiering of a blob from cool to hot on a blob access. This property requires tierToCool.daysAfterLastAccessTimeGreaterThan.
      [BaseBlobTierToArchiveDaysAfterCreationGreaterThan <Single?>]: Value indicating the age in days after blob creation.
      [BaseBlobTierToArchiveDaysAfterLastTierChangeGreaterThan <Single?>]: Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterModificationGreaterThan to be set for baseBlobs based actions. The blob will be archived if both the conditions are satisfied.
      [BaseBlobTierToCoolDaysAfterCreationGreaterThan <Single?>]: Value indicating the age in days after blob creation.
      [BaseBlobTierToCoolDaysAfterLastTierChangeGreaterThan <Single?>]: Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterModificationGreaterThan to be set for baseBlobs based actions. The blob will be archived if both the conditions are satisfied.
      [DeleteDaysAfterLastAccessTimeGreaterThan <Single?>]: Value indicating the age in days after last blob access. This property can only be used in conjunction with last access time tracking policy
      [DeleteDaysAfterModificationGreaterThan <Single?>]: Value indicating the age in days after last modification
      [SnapshotDeleteDaysAfterCreationGreaterThan <Single?>]: Value indicating the age in days after creation
      [SnapshotDeleteDaysAfterLastTierChangeGreaterThan <Single?>]: Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterCreationGreaterThan to be set for snapshots and blob version based actions. The blob will be archived if both the conditions are satisfied.
      [SnapshotTierToArchiveDaysAfterCreationGreaterThan <Single?>]: Value indicating the age in days after creation
      [SnapshotTierToArchiveDaysAfterLastTierChangeGreaterThan <Single?>]: Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterCreationGreaterThan to be set for snapshots and blob version based actions. The blob will be archived if both the conditions are satisfied.
      [SnapshotTierToCoolDaysAfterCreationGreaterThan <Single?>]: Value indicating the age in days after creation
      [SnapshotTierToCoolDaysAfterLastTierChangeGreaterThan <Single?>]: Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterCreationGreaterThan to be set for snapshots and blob version based actions. The blob will be archived if both the conditions are satisfied.
      [TierToArchiveDaysAfterLastAccessTimeGreaterThan <Single?>]: Value indicating the age in days after last blob access. This property can only be used in conjunction with last access time tracking policy
      [TierToArchiveDaysAfterModificationGreaterThan <Single?>]: Value indicating the age in days after last modification
      [TierToCoolDaysAfterLastAccessTimeGreaterThan <Single?>]: Value indicating the age in days after last blob access. This property can only be used in conjunction with last access time tracking policy
      [TierToCoolDaysAfterModificationGreaterThan <Single?>]: Value indicating the age in days after last modification
      [VersionDeleteDaysAfterCreationGreaterThan <Single?>]: Value indicating the age in days after creation
      [VersionDeleteDaysAfterLastTierChangeGreaterThan <Single?>]: Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterCreationGreaterThan to be set for snapshots and blob version based actions. The blob will be archived if both the conditions are satisfied.
      [VersionTierToArchiveDaysAfterCreationGreaterThan <Single?>]: Value indicating the age in days after creation
      [VersionTierToArchiveDaysAfterLastTierChangeGreaterThan <Single?>]: Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterCreationGreaterThan to be set for snapshots and blob version based actions. The blob will be archived if both the conditions are satisfied.
      [VersionTierToCoolDaysAfterCreationGreaterThan <Single?>]: Value indicating the age in days after creation
      [VersionTierToCoolDaysAfterLastTierChangeGreaterThan <Single?>]: Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterCreationGreaterThan to be set for snapshots and blob version based actions. The blob will be archived if both the conditions are satisfied.
    Name <String>: A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.
    [Enabled <Boolean?>]: Rule is enabled if set to true.
    [FilterBlobIndexMatch <ITagFilter[]>]: An array of blob index tag based filters, there can be at most 10 tag filters
      Name <String>: This is the filter tag name, it can have 1 - 128 characters
      Op <String>: This is the comparison operator which is used for object comparison and filtering. Only == (equality operator) is currently supported
      Value <String>: This is the filter tag value field used for tag based filtering, it can have 0 - 256 characters
    [FilterBlobType <String[]>]: An array of predefined enum values. Currently blockBlob supports all tiering and delete actions. Only delete actions are supported for appendBlob.
    [FilterPrefixMatch <String[]>]: An array of strings for prefixes to be match.
.Link
https://docs.microsoft.com/powershell/module/az.storage/set-azstoragemanagementpolicy
#>
function Set-AzStorageManagementPolicy {
[OutputType([Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IManagementPolicy])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Category('Path')]
    [System.String]
    # The name of the storage account within the specified resource group.
    # Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    ${AccountName},

    [Parameter(Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Category('Path')]
    [System.String]
    # The name of the resource group within the user's subscription.
    # The name is case insensitive.
    ${ResourceGroupName},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Category('Path')]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.DefaultInfo(Script='(Get-AzContext).Subscription.Id')]
    [System.String]
    # The ID of the target subscription.
    ${SubscriptionId},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IManagementPolicy]
    # The Get Storage Account ManagementPolicies operation response.
    # To construct, see NOTES section for PROPERTY properties and create a hash table.
    ${Property},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IManagementPolicyRule[]]
    # The Storage Account ManagementPolicies Rules.
    # See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
    # To construct, see NOTES section for POLICYRULE properties and create a hash table.
    ${PolicyRule},

    [Parameter()]
    [Alias('AzureRMContext', 'AzureCredential')]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Category('Azure')]
    [System.Management.Automation.PSObject]
    # The credentials, account, tenant, and subscription used for communication with Azure.
    ${DefaultProfile},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.Storage.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update = 'Az.Storage.private\Set-AzStorageManagementPolicy_Update';
            UpdateExpanded = 'Az.Storage.private\Set-AzStorageManagementPolicy_UpdateExpanded';
        }
        if (('Update', 'UpdateExpanded') -contains $parameterSet -and -not $PSBoundParameters.ContainsKey('SubscriptionId')) {
            $PSBoundParameters['SubscriptionId'] = (Get-AzContext).Subscription.Id
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}
